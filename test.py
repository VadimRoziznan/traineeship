import matplotlib.pyplot as plt
from PIL import Image
from pdf2image import convert_from_path

# def latex_to_png(latex_str):
#     fig = plt.figure()
#
#     plt.axis("off")
#     plt.text(0.5, 0.5, f"${latex_str}$", size=50, ha="center", va="center")
#
#     # pdf_path = "result.pdf"
#     png_path = " result.png"
#     plt.savefig(png_path, format="png", bbox_inches="tight", pad_inches=0.4)
#     plt.close(fig)
#
#     # image = convert_from_path(pdf_path)
#     # image[0].save(png_path, "PNG")
#
#     return png_path
#
# latex_formula = ('При температуре \\(0^{\\circ}C\\) серебряная цепочка имеет длину \\(l_{\\circ}=0.6\\)м. При возрастании температуры происходит тепловое расширение серебряной цепочки, и её длина, выраженная в метрах, меняется по закону \\(l(t^{\\circ})=l_0(1+\\alpha{\\cdot}t^{\\circ})\\), где \\(\\alpha=1.95{\\cdot}10^{-5}(^{\\circ}C^{-1})\\) — коэффициент теплового расширения, \\(t^{\\circ}\\) — температура (в градусах Цельсия). При какой температуре серебряная цепочка удлинится на 0.3мм? Ответ выразите в градусах Цельсия.').replace('\\(', ' ').replace('\\)', ' ')
# png_path = latex_to_png(latex_formula)
#
# print(png_path)

# image = Image.open(png_path)
# image.show()

# t = 'При температуре \\(0^{\\circ}C\\)'
# t = t.replace('\\(', '').replace('\\)', '')
#
# print(t)


# import matplotlib.pyplot as plt
# from PIL import Image
#
# def latex_to_png(latex_str):
#     fig = plt.figure()
#
#     plt.axis("off")
#     plt.text(0.5, 0.5, f"{latex_str}", size=12, ha="center", va="center", wrap=True)
#
#     png_path = "result.png"
#
#     plt.savefig(png_path, format="png", bbox_inches="tight", pad_inches=0.1)
#     plt.close(fig)
#
#     return png_path
#
# latex_formula = "При температуре $0^{\circ}C$"
# png_path = latex_to_png(latex_formula)
#
# image = Image.open(png_path)
# image.show()


import matplotlib.pyplot as plt
import numpy as np
import io
import base64

def latex_to_console(latex_str):
    fig, ax = plt.subplots()
    ax.axis("off")
    ax.text(0.5, 0.5, f"${latex_str}$", size=50, ha="center", va="center")
    return ax.text(0.5, 0.5, f"{latex_str}", size=50, ha="center", va="center")

# Пример использования
latex_str = r"x^2 + y^2 = r^2"
latex_to_console(latex_str)
print(latex_to_console(latex_str))

def get_thermal_expansion_coefficient(name: str) -> (list, None):
    """
    Температурные коэффициенты линейного расширения.
    Примечание: источниками справочных данных являются публикации в Интернете, поэтому они не могут считаться
    «официальными» и «абсолютно точными».

    Пример заполнение: "Название материала": [
                            минимальное значение(обязательный параметр),
                            максимальное значение(необязательный параметр),
                            шаг(необязательный параметр)
                       ]

                       "Каменная кладка": [0.47, 0.9, 0.01],
                       "Кварц": [0.077, 0.09],
                       "Сталь":[1.3,]

    Если коэффициент не лежит в диапазоне значений указывается только одно значение как в примере выше. Шаг по умолчанию
    равен 0.1, при необходимости изменить.
    """

    list_thermal_expansion_coefficient = {
        "ABS (акрилонитрил-бутадиен-стирол) термопласт": [
            7.38,
        ],
        "ABS - стекло, армированное волокнами": [
            3.04,
        ],
        "Акриловый материал, прессованный": [
            23.4,
        ],
        "Алмаз": [
            0.11,
        ],
        "Алмаз технический": [
            0.12,
        ],
        "Алюминий": [
            2.22,
        ],
        "Ацеталь": [
            10.65,
        ],
        "Ацеталь , армированный стекловолокном": [
            3.94,
        ],
        "Ацетат целлюлозы (CA)": [
            13.0,
        ],
        "Ацетат бутират целлюлозы (CAB)": [
            2.52,
        ],
        "Барий": [
            2.06,
        ],
        "Бериллий": [
            1.15,
        ],
        "Бериллиево-медный сплав (Cu 75, Be 25)": [
            1.67,
        ],
        "Бетон": [
            1.45,
        ],
        "Бетонные структуры": [
            0.98,
        ],
        "Бронза": [
            1.8,
        ],
        "Ванадий": [
            0.8,
        ],
        "Висмут": [
            1.3,
        ],
        "Вольфрам": [
            0.43,
        ],
        "Гадолиний": [
            0.9,
        ],
        "Гафний": [
            0.59,
        ],
        "Германий": [
            0.61,
        ],
        "Гольмий": [
            1.12,
        ],
        "Гранит": [
            0.79,
        ],
        "Графит, чистый": [
            0.79,
        ],
        "Диспрозий": [
            0.99,
        ],
        "Древесина, пихта, ель": [
            0.37,
        ],
        "Древесина дуба, параллельно волокнам": [
            0.49,
        ],
        "Древесина дуба , перпендикулярно волокнам": [
            0.54,
        ],
        "Древесина, сосна": [
            0.5,
        ],
        "Европий": [
            3.5,
        ],
        "Железо, чистое": [
            1.2,
        ],
        "Железо, литое": [
            1.04,
        ],
        "Железо, кованое": [
            1.13,
        ],
        "Золото": [
            1.42,
        ],
        "Известняк": [
            0.8,
        ],
        "Инвар (сплав железа с никелем)": [
            0.15,
        ],
        "Инконель (сплав)": [
            1.26,
        ],
        "Иридий": [
            0.64,
        ],
        "Иттербий": [
            2.63,
        ],
        "Иттрий": [
            1.06,
        ],
        "Кадмий": [
            3,
        ],
        "Калий": [
            8.3,
        ],
        "Кальций": [
            2.23,
        ],
        "Каменная кладка": [
            0.47, 0.9, 0.1
        ],
        "Каучук, твердый": [
            7.7,
        ],
        "Кварц": [
            0.077, 0.09, 0.1
        ],
        "Керамическая плитка (черепица)": [
            0.59,
        ],
        "Кирпич": [
            0.55,
        ],
        "Кобальт": [
            1.2,
        ],
        "Констанан (сплав)": [
            1.88,
        ],
        "Корунд, спеченный": [
            0.65,
        ],
        "Кремний": [
            0.51,
        ],
        "Лантан": [
            1.21,
        ],
        "Латунь": [
            1.87,
        ],
        "Лед": [
            5.1,
        ],
        "Литий": [
            4.6,
        ],
        "Литая стальная решетка": [
            1.08,
        ],
        "Лютеций": [
            0.99,
        ],
        "Литой лист из акрилового пластика": [
            8.1,
        ],
        "Магний": [
            2.5,
        ],
        "Марганец": [
            2.2,
        ],
        "Медноникелевый сплав 30%": [
            1.62,
        ],
        "Медь": [
            1.66,
        ],
        "Молибден": [
            0.5,
        ],
        "Монель-металл (никелево-медный сплав)": [
            1.35,
        ],
        "Мрамор": [
            0.55, 1.41, 0.1
        ],
        "Мыльный камень (стеатит)": [
            0.85,
        ],
        "Мышьяк": [
            0.47,
        ],
        "Натрий": [
            7,
        ],
        "Нейлон, универсальный": [
            7.2,
        ],
        "Нейлон, Тип 11 (Type 11)": [
            10,
        ],
        "Нейлон, Тип 12 (Type 12)": [
            8.05,
        ],
        "Нейлон литой , Тип 6 (Type 6)": [
            8.5,
        ],
        "Нейлон, Тип 6/6 (Type 6/6), формовочный состав": [
            8,
        ],
        "Неодим": [
            0.96,
        ],
        "Никель": [
            1.30,
        ],
        "Ниобий (Columbium)": [
            0.7,
        ],
        "Нитрат целлюлозы (CN)": [
            10,
        ],
        "Окись алюминия": [
            0.54,
        ],
        "Олово": [
            2.34,
        ],
        "Осмий": [
            0.5,
        ],
        "Палладий": [
            1.18,
        ],
        "Песчаник": [
            1.16,
        ],
        "Платина": [
            0.9,
        ],
        "Плутоний": [
            5.4,
        ],
        "Полиалломер": [
            9.15,
        ],
        "Полиамид (PA)": [
            11,
        ],
        "Поливинилхлорид (PVC)": [
            5.04,
        ],
        "Поливинилденфторид (PVDF)": [
            12.78,
        ],
        "Поликарбонат (PC)": [
            7.02,
        ],
        "Поликарбонат - армированный стекловолокном": [
            2.15,
        ],
        "Полипропилен - армированный стекловолокном": [
            3.2,
        ],
        "Полистирол (PS)": [
            7,
        ],
        "Полисульфон (PSO)": [
            5.58,
        ],
        "Полиуретан (PUR), жесткий": [
            5.76,
        ],
        "Полифенилен - армированный стекловолокном": [
            3.58,
        ],
        "Полифенилен (PP), ненасыщенный": [
            9.05,
        ],
        "Полиэстер": [
            12.35,
        ],
        "Полиэстер, армированный стекловолокном": [
            2.5,
        ],
        "Полиэтилен (PE)": [
            20,
        ],
        "Полиэтилен - терефталий (PET)": [
            5.94,
        ],
        "Празеодимий": [
            0.67,
        ],
        "Припой 50 - 50": [
            2.4,
        ],
        "Прометий": [
            1.1,
        ],
        "Рений": [
            0.67,
        ],
        "Родий": [
            0.8,
        ],
        "Рутений": [
            0.91,
        ],
        "Самарий": [
            1.27,
        ],
        "Свинец": [
            2.8,
        ],
        "Свинцово-оловянный сплав": [
            1.16,
        ],
        "Селен": [
            0.38,
        ],
        "Серебро": [
            1.95,
        ],
        "Скандий": [
            1.02,
        ],
        "Слюда": [
            0.3,
        ],
        "Сплав твердый (Hard alloy) K20": [
            0.6,
        ],
        "Сплав хастелой (Hastelloy) C": [
            1.13,
        ],
        "Сталь": [
            1.3,
        ],
        "Сталь нержавеющая аустенитная (304)": [
            1.73,
        ],
        "Сталь нержавеющая аустенитная (310)": [
            1.44,
        ],
        "Сталь нержавеющая аустенитная (316)": [
            1.6,
        ],
        "Сталь нержавеющая ферритная (410)": [
            0.99,
        ],
        "Стекло витринное (зеркальное, листовое)": [
            0.9,
        ],
        "Стекло пирекс, пирекс": [
            0.4,
        ],
        "Стекло тугоплавкое": [
            0.59,
        ],
        "Строительный (известковый) раствор": [
            0.73, 1.35, 0.1
        ],
        "Стронций": [
            2.25,
        ],
        "Сурьма": [
            1.04,
        ],
        "Таллий": [
            2.99,
        ],
        "Тантал": [
            0.65,
        ],
        "Теллур": [
            3.69,
        ],
        "Тербий": [
            1.03,
        ],
        "Титан": [
            0.86,
        ],
        "Торий": [
            1.2,
        ],
        "Тулий": [
            1.33,
        ],
        "Уран": [
            1.39,
        ],
        "Фарфор": [
            0.36, 0.45, 0.1
        ],
        "Фенольно-альдегидный полимер без добавок": [
            8,
        ],
        "Фторэтилен пропилен (FEP)": [
            13.5,
        ],
        "Хлорированный поливинилхлорид (CPVC)": [
            6.66,
        ],
        "Хром": [
            0.62,
        ],
        "Цемент": [
            1,
        ],
        "Церий": [
            0.52,
        ],
        "Цинк": [
            2.97,
        ],
        "Цирконий": [
            0.57,
        ],
        "Шифер": [
            1.04,
        ],
        "Штукатурка": [
            1.64,
        ],
        "Эбонит": [
            7.66,
        ],
        "Эпоксидная смола , литая резина и незаполненные продукты из них": [
            5.5,
        ],
        "Эрбий": [
            1.22,
        ],
        "Этилен винилацетат (EVA)": [
            18,
        ],
        "Этилен и этилакрилат (EEA)": [
            20.5,
        ],
        "Эфир виниловый": [
            1.6, 2.2, 0.1
        ],
    }

    coefficient_list = list_thermal_expansion_coefficient.get(name)

    if not coefficient_list:
        return None

    if len(coefficient_list) == 2:
        step = 0.1
        coefficient_list.append(step)

    elif len(coefficient_list) == 1:
        coefficient_list.append(coefficient_list[0] + 1)
        step = 1
        coefficient_list.append(step)

    if len(coefficient_list) == 3:
        coefficient_list = np.arange(
            coefficient_list[0], coefficient_list[1], coefficient_list[2]
        )
        return coefficient_list

    return None



    def checking_plot(name: str, checklist: list, correction_percentage: int) -> list:
        """
        Функция возвращает отчет в котором указывается номер элемента и в каком процентном соотношении совпадает
        строка переданная в name с элементом каждого сценария, в функции есть настраиваемый параметр
        correction_percentage, при необходимости измените процент коррекции.
        """
        report = []

        for index, plot in enumerate(checklist):
            matcher = round(
                SequenceMatcher(None, name.lower(), plot.get("element")).ratio() * 100
            )

            if matcher > correction_percentage:
                report.append(
                    f"Сюжет №{index} {plot.get('element')} имеет совпадение {matcher}%"
                )

        return report

    # При необходимости проверить сюжеты на вхождение имени раскомментировать код, измените значение name
    # на необходимый, при необходимости измените процент коррекции.
    # print(checking_plot(name='медные Стержни', checklist=values_list, correction_percentage=50))